{"version":3,"sources":["../server/app.js"],"names":["app","use","join","__dirname","json","urlencoded","extended","static","expressGraphQL","require","schema","graphiql","api_v1","page","name","get","response","req","res","sendFile"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA;;;AAGAA,IAAIC,GAAJ,CAAQ,4BAAQ,eAAKC,IAAL,CAAUC,SAAV,EAAqB,aAArB,CAAR,CAAR;AACAH,IAAIC,GAAJ,CAAQ,uBAAR,E,CAAmB;AACnBD,IAAIC,GAAJ,CAAQ,4BAAR;AACAD,IAAIC,GAAJ,CAAQ,sBAAO,MAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;AACAJ,IAAIC,GAAJ,CAAQ,qBAAWI,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA;AACAN,IAAIC,GAAJ,CAAQ,SAAR,EAAmB,kBAAQM,MAAR,CAAe,eAAKL,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,QAA/B,CAAf,CAAnB;;AAEA;;AAEA;;;;AAIA;;AAEA;;AAEA;;;;AAIA;;AAEA;;AAEA;;;;AAIA,IAAMK,iBAAiBC,QAAQ,iBAAR,CAAvB;AACA,IAAMC,SAASD,QAAQ,kBAAR,CAAf;;AAEAT,IAAIC,GAAJ,CAAQ,cAAR,EAAwBO,eAAe;AACrCE,UAAQA,MAD6B;AAErCC,YAAU;AACV;AAHqC,CAAf,CAAxB;;AAMA;;AAEA;AACAX,IAAIC,GAAJ,CAAQ,SAAR,EAAmB,iBAAOW,MAA1B;AACAZ,IAAIC,GAAJ,CAAQ,OAAR,EAAiB,iBAAOY,IAAxB;;AAEA;AACA;AACA,IAAI,cAAIC,IAAJ,KAAa,YAAjB,EAA+B;AAC7Bd,MAAIe,GAAJ,CAAQ,GAAR,EAAa,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACvCA,QAAIC,QAAJ,CAAa,eAAKjB,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAb;AACD,GAFD;AAGD;;kBAEcH,G","file":"app.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport favicon from 'serve-favicon';\nimport helmet from 'helmet';\nimport compression from 'compression';\nimport path from 'path';\n\nimport env from './config/env';\nimport routes from './routes';\n\nconst app = express();\n\n/*==================================\n=            Middleware            =\n==================================*/\napp.use(favicon(path.join(__dirname, 'favicon.ico')));\napp.use(helmet()); // Helmet helps you secure your Express apps by setting various HTTP headers.\napp.use(compression());\napp.use(logger('tiny'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n// serve static files, this is for frontend React\napp.use('/static', express.static(path.join(__dirname, 'public', 'static')));\n\n/*=====  End of Middleware  ======*/\n\n/*===========================================\n=            Basic Authentication            =\n===========================================*/\n\n// app.use(require('node-basicauth')({'haochuan': 'password'}));\n\n/*=====  End of Basic Authentication  ======*/\n\n/*===========================\n=            COR            =\n===========================*/\n\n// app.use(require('cors')());\n\n/*=====  End of COR  ======*/\n\n/*===================================\n=          GraphQL Route            =\n===================================*/\n\nconst expressGraphQL = require('express-graphql');\nconst schema = require('./graphql/schema');\n\napp.use('/api/graphql', expressGraphQL({\n  schema: schema,\n  graphiql: true\n  //rootValue: { db: req.app.locals.db }\n}));\n\n/*====== End of GraphQL Route =====*/\n\n// Routes\napp.use('/api/v1', routes.api_v1);\napp.use('/page', routes.page);\n\n// Load React App\n// Serve HTML file for production\nif (env.name === 'production') {\n  app.get('*', function response(req, res) {\n    res.sendFile(path.join(__dirname, 'public', 'index.html'));\n  });\n}\n\nexport default app;\n"]}