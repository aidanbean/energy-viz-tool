{"version":3,"sources":["../../server/pi/PiFetchers.example.js"],"names":["fetchAPI","require","test_tagName","test_wildcard","fetchWebId_byPoint","then","WebId_response","fetchStream_value","json_response","console","log","Value","Timestamp","fetchStream_byMonths","startTime","endTime","interval","fetchStream_byMinutes","fetchWebId_byDataServer","test_wildcards","Items","item","Name"],"mappings":";;AAAA;;;AAGA,IAAMA,WAAWC,QAAQ,iBAAR,CAAjB;AACA,IAAMC,eAAe,yBAArB;AACA,IAAMC,gBAAgB,QAAtB;;AAEA;AACAH,SAASI,kBAAT,CAA4BF,YAA5B,EAA0CG,IAA1C,CAA+C,UAACC,cAAD,EAAoB;AAC/DN,aAASO,iBAAT,CAA2BD,cAA3B,EAA2CD,IAA3C,CAAgD,UAACG,aAAD,EAAmB;AAC/DC,gBAAQC,GAAR,CAAY,yBAAZ;AACAD,gBAAQC,GAAR,CAAYF,cAAcG,KAA1B,EAF+D,CAEzB;AACtCF,gBAAQC,GAAR,CAAYF,cAAcI,SAA1B,EAH+D,CAGzB;AACzC,KAJD;AAKH,CAND;;AAQA;AACAZ,SAASI,kBAAT,CAA4BF,YAA5B,EAA0CG,IAA1C,CAA+C,UAACC,cAAD,EAAoB;AAC/D;AACAN,aAASa,oBAAT,CAAgCP,cAAhC,EACgCQ,YAAY,YAD5C,EAEgCC,UAAU,YAF1C,EAGgCC,WAAW,KAH3C,EAIiCX,IAJjC,CAIsC,UAACG,aAAD,EAAmB;AACrDC,gBAAQC,GAAR,CAAY,2BAAZ;AACAD,gBAAQC,GAAR,CAAYF,aAAZ;AACH,KAPD;AAQH,CAVD;;AAYA;AACAR,SAASI,kBAAT,CAA4BF,YAA5B,EAA0CG,IAA1C,CAA+C,UAACC,cAAD,EAAoB;AAC/D;AACAN,aAASiB,qBAAT,CAAgCX,cAAhC,EACgCQ,YAAY,gBAD5C,EAEgCC,UAAU,iBAF1C,EAGgCC,WAAW,KAH3C,EAIiCX,IAJjC,CAIsC,UAACG,aAAD,EAAmB;AACrDC,gBAAQC,GAAR,CAAY,4BAAZ;AACAD,gBAAQC,GAAR,CAAYF,aAAZ;AACH,KAPD;AAQH,CAVD;;AAYA;AACAR,SAASkB,uBAAT,CAAiCC,cAAjC,EAAiDd,IAAjD,CAAsD,UAACG,aAAD,EAAmB;AAAA;AAAA;AAAA;;AAAA;AACrE,6BAAgBA,cAAcY,KAA9B,8HAAqC;AAAA,gBAA7BC,IAA6B;AAAE;AACnCZ,oBAAQC,GAAR,CAAYW,KAAKC,IAAjB;AACH;AAHoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxE,CAJD","file":"PiFetchers.example.js","sourcesContent":["/*  Some examples of PI Web API queries using the functions in \"piFetchers.js\". \n    Delete/Modify this file as you see fit during your development process */\n\nconst fetchAPI = require('./piFetchers.js');\nconst test_tagName = 'Ghausi_ChilledWater_EUI';\nconst test_wildcard = 'Giedt*';\n\n/* get the most-recent summary value of a resource */\nfetchAPI.fetchWebId_byPoint(test_tagName).then((WebId_response) => {\n    fetchAPI.fetchStream_value(WebId_response).then((json_response) => {\n        console.log(\"fetchStream_value test:\")\n        console.log(json_response.Value);     // Print Value (eg. Ghausi ChilledWater EUI = 65.44068...)\n        console.log(json_response.Timestamp); // Print Timestamp (eg. 2017-12-18T18:27:17.9438976Z )\n    });\n});\n\n/* get resource on a monthly basis */\nfetchAPI.fetchWebId_byPoint(test_tagName).then((WebId_response) => {\n    // get Ghausi ChilledWater EUI on the first day of each month from 2016-01-01 to 2016-12-01\n    fetchAPI.fetchStream_byMonths(  WebId_response, \n                                    startTime = '2016-01-01', \n                                    endTime = '2016-12-01', \n                                    interval = '1mo')\n                                    .then((json_response) => {\n        console.log('fetchStream_byMonths test')\n        console.log(json_response);\n    });\n});\n\n/* get resource in a shorter time interval */\nfetchAPI.fetchWebId_byPoint(test_tagName).then((WebId_response) => {\n    // get Ghausi ChilledWater EUI on 12-11-2017 from 6am to 12pm every 15 minutes\n    fetchAPI.fetchStream_byMinutes( WebId_response,\n                                    startTime = '12-11-2017-6am', \n                                    endTime = '12-11-2017-12pm', \n                                    interval = '15m')\n                                    .then((json_response) => {\n        console.log('fetchStream_byMinutes test');\n        console.log(json_response);\n    });\n});\n\n/* fetch data using dataserver and wildcards */\nfetchAPI.fetchWebId_byDataServer(test_wildcards).then((json_response) => {\n    for(let item of json_response.Items) { // Retrieve names of all Giedt attributes\n        console.log(item.Name);\n    }\n});\n"]}